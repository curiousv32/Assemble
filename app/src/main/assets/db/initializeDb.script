CREATE TABLE IF NOT EXISTS users (
id CHAR(36) PRIMARY KEY, username VARCHAR(255) NOT NULL UNIQUE, password VARCHAR(255) NOT NULL);

CREATE TABLE IF NOT EXISTS notes (
id CHAR(36) PRIMARY KEY, name VARCHAR(255) NOT NULL,
creation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
last_updated_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,content LONGVARCHAR,
owner_id CHAR(36), FOREIGN KEY (owner_id) REFERENCES users(id));

CREATE TABLE IF NOT EXISTS tasks (
id CHAR(36) PRIMARY KEY, title VARCHAR(255) NOT NULL,
description VARCHAR(255) NOT NULL, deadline TIMESTAMP NOT NULL,
priority VARCHAR(50) NOT NULL, status VARCHAR(50) NOT NULL,
owner_id CHAR(36), FOREIGN KEY (owner_id) REFERENCES users(id) );

CREATE TABLE IF NOT EXISTS flashcards (
id INTEGER IDENTITY PRIMARY KEY, username VARCHAR(255) NOT NULL, question VARCHAR(255) NOT NULL,
answer VARCHAR(255) NOT NULL, FOREIGN KEY (username) REFERENCES users(username));

CREATE TABLE IF NOT EXISTS tasknotelinks (
task_id CHAR(36), note_id CHAR(36), PRIMARY KEY (task_id, note_id),
FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE,
FOREIGN KEY (note_id) REFERENCES notes(id) ON DELETE CASCADE);